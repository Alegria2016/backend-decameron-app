# Etapa de construcción (builder)
FROM composer:2.6 AS builder

WORKDIR /app
COPY composer.json composer.lock ./
RUN composer install --no-dev --optimize-autoloader --ignore-platform-reqs --no-scripts

# Etapa de producción
FROM php:8.2-fpm-alpine

# 1. Instala dependencias del sistema
RUN apk add --no-cache \
    postgresql-dev \
    git \
    unzip \
    libzip-dev \
    && docker-php-ext-install pdo pdo_pgsql zip

# 2. Copia las dependencias de Composer
COPY --from=builder /app/vendor /var/www/html/vendor

# 3. Copia el resto de la aplicación
WORKDIR /var/www/html
COPY . .

# Configuración de producción (modificado)
RUN if [ -f .env.production ]; then \
      cp .env.production .env; \
    else \
      echo "APP_ENV=production" > .env; \
      echo "APP_DEBUG=false" >> .env; \
    fi && \
    php artisan key:generate --force && \
    php artisan config:cache && \
    php artisan route:cache && \
    php artisan view:cache && \
    chown -R www-data:www-data storage bootstrap/cache

EXPOSE 8000
CMD ["php", "artisan", "serve", "--host=0.0.0.0", "--port=8000"]